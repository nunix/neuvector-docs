"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2835],{577:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>l,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var r=n(74848),o=n(28453);const i={title:"Reporting",sidebar_label:"7. Reporting",taxonomy:{category:"docs"},slug:"/reporting"},s="Reporting",c={id:"reporting/reporting",title:"Reporting",description:"Reporting and Notifications",source:"@site/versioned_docs/version-5.3/07.reporting/07.reporting.md",sourceDirName:"07.reporting",slug:"/reporting",permalink:"/reporting",draft:!1,unlisted:!1,editUrl:"https://github.com/neuvector/docs/edit/main/versioned_docs/version-5.3/07.reporting/07.reporting.md",tags:[],version:"5.3",sidebarPosition:7,frontMatter:{title:"Reporting",sidebar_label:"7. Reporting",taxonomy:{category:"docs"},slug:"/reporting"},sidebar:"tutorialSidebar",previous:{title:"Parallel & Standalone Scanners",permalink:"/scanning/scanners"},next:{title:"Reporting & Notifications",permalink:"/reporting/reporting"}},a={},p=[];function d(e){const t={h1:"h1",p:"p",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"reporting",children:"Reporting"}),"\n",(0,r.jsx)(t.p,{children:"Reporting and Notifications"})]})}function l(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>c});var r=n(96540);const o={},i=r.createContext(o);function s(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);