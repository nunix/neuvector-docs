"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7768],{77481:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>c});var r=i(74848),s=i(28453);const t={title:"Registry Scanning Configuration",taxonomy:{category:"docs"},slug:"/scanning/registry"},a=void 0,o={id:"scanning/registry/registry",title:"Registry Scanning Configuration",description:"Registry scanning requires that the NeuVector Allinone or Controller container be deployed on a host/node. Please see the Installation/Deployment section for how to deploy the NeuVector containers. Configure registry scanning from the NeuVector console after logging in to the manager.",source:"@site/versioned_docs/version-5.3/06.scanning/02.registry/02.registry.md",sourceDirName:"06.scanning/02.registry",slug:"/scanning/registry",permalink:"/scanning/registry",draft:!1,unlisted:!1,editUrl:"https://github.com/neuvector/docs/edit/main/versioned_docs/version-5.3/06.scanning/02.registry/02.registry.md",tags:[],version:"5.3",sidebarPosition:2,frontMatter:{title:"Registry Scanning Configuration",taxonomy:{category:"docs"},slug:"/scanning/registry"},sidebar:"tutorialSidebar",previous:{title:"Compliance & CIS Benchmarks",permalink:"/scanning/scanning/compliance"},next:{title:"Harbor Pluggable Scanner Module",permalink:"/scanning/registry/harbor"}},l={},c=[{value:"Configure Registry Scanning",id:"configure-registry-scanning",level:3},{value:"Repository filter examples",id:"repository-filter-examples",level:4},{value:"Registry scan options",id:"registry-scan-options",level:4},{value:"Configuring Proxy server for Registry",id:"configuring-proxy-server-for-registry",level:4},{value:"Native Docker registry (also Quay and Harbor)",id:"native-docker-registry-also-quay-and-harbor",level:4},{value:"Add Native Docker registry",id:"add-native-docker-registry",level:5},{value:"Start scanning the Docker registry",id:"start-scanning-the-docker-registry",level:5},{value:"View the scan result",id:"view-the-scan-result",level:5},{value:"Amazon ECR Registry",id:"amazon-ecr-registry",level:4},{value:"Add Amazon ECR registry",id:"add-amazon-ecr-registry",level:5},{value:"Redhat registry",id:"redhat-registry",level:4},{value:"Add Red Hat registry",id:"add-red-hat-registry",level:5},{value:"Openshift registry",id:"openshift-registry",level:4},{value:"Add OpenShift registry with username and password",id:"add-openshift-registry-with-username-and-password",level:5},{value:"Add OpenShift registry with token",id:"add-openshift-registry-with-token",level:5},{value:"Stability issues in Openshift 3.7 Registry",id:"stability-issues-in-openshift-37-registry",level:5},{value:"JFrog Artifactory",id:"jfrog-artifactory",level:4},{value:"Add JFrog Artifactory registry (Docker Access method \u2013 Repository Path)",id:"add-jfrog-artifactory-registry-docker-access-method--repository-path",level:5},{value:"Adding JFrog Artifactory registry (Docker Access method \u2013 subdomain)",id:"adding-jfrog-artifactory-registry-docker-access-method--subdomain",level:5},{value:"Add JFrog Artifactory registry (Docker Access method \u2013 port)",id:"add-jfrog-artifactory-registry-docker-access-method--port",level:5},{value:"Add SaaS JFrog Artifactory registry (Docker access method \u2013 Port)",id:"add-saas-jfrog-artifactory-registry-docker-access-method--port",level:5},{value:"Start Scanning a JFrog Artifactory Registry",id:"start-scanning-a-jfrog-artifactory-registry",level:5},{value:"Google Container Registry",id:"google-container-registry",level:4},{value:"Enable Cloud Resource Manager API for the project",id:"enable-cloud-resource-manager-api-for-the-project",level:5},{value:"Create key for container service account",id:"create-key-for-container-service-account",level:5},{value:"Copy json file to client machine",id:"copy-json-file-to-client-machine",level:5},{value:"Add Google Container Registry from the NeuVector GUI",id:"add-google-container-registry-from-the-neuvector-gui",level:5},{value:"Start Scanning a Google Container Registry",id:"start-scanning-a-google-container-registry",level:5},{value:"Azure Container Registry",id:"azure-container-registry",level:4},{value:"Obtain Azure container username and password as shown below",id:"obtain-azure-container-username-and-password-as-shown-below",level:5},{value:"Add Azure Container Registry from the NeuVector GUI",id:"add-azure-container-registry-from-the-neuvector-gui",level:5},{value:"Start Scanning a Azure Container Registry",id:"start-scanning-a-azure-container-registry",level:5},{value:"Sonatype Nexus Docker registry",id:"sonatype-nexus-docker-registry",level:4},{value:"Add Sonatype Nexus Docker registry",id:"add-sonatype-nexus-docker-registry",level:5},{value:"Start scanning Sonatype Nexus Docker registry",id:"start-scanning-sonatype-nexus-docker-registry",level:5},{value:"Gitlab Container Registry",id:"gitlab-container-registry",level:4},{value:"Sample GitLab Environmnent Configurations",id:"sample-gitlab-environmnent-configurations",level:5},{value:"Obtain Gitlab private token as shown below",id:"obtain-gitlab-private-token-as-shown-below",level:5},{value:"Obtaining External and Registry URLs",id:"obtaining-external-and-registry-urls",level:5},{value:"Add Gitlab Registry from the NeuVector Console",id:"add-gitlab-registry-from-the-neuvector-console",level:5},{value:"IBM Cloud Container Registry",id:"ibm-cloud-container-registry",level:4},{value:"Add IBM Container registry",id:"add-ibm-container-registry",level:5},{value:"Harbor Registry",id:"harbor-registry",level:4}];function d(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h3:"h3",h4:"h4",h5:"h5",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Registry scanning requires that the NeuVector Allinone or Controller container be deployed on a host/node. Please see the ",(0,r.jsx)(n.a,{href:"/basics/installation",children:"Installation/Deployment"})," section for how to deploy the NeuVector containers. Configure registry scanning from the NeuVector console after logging in to the manager."]}),"\n",(0,r.jsx)(n.p,{children:"In addition, make sure there is a NeuVector scanner container deployed and configured to connect to the Allinone or Controller. In 4.0 and later, the neuvector/scanner container must be deployed separate from the allinone or controller."}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"Registry image scanning is performed by the scanner and the image is pulled and expanded in memory. If expanded image sizes larger than 500MB are expected, consider increasing the scanner memory to 1.5GB or more to provide capacity and headroom for the scanner."})}),"\n",(0,r.jsxs)(n.p,{children:["To increase registry scanning performance and scalability, multiple scanner pods can be deployed on different nodes to distribute the scanning tasks across multiple scanners. See the section ",(0,r.jsx)(n.a,{href:"/scanning/scanners",children:"Multiple Parallel Scanners"})," for details."]}),"\n",(0,r.jsxs)(n.p,{children:["For multi-cluster (federated) environments, the primary (master) cluster can scan a registry/repo designated as a federated registry. The scan results from these registries will be synchronized to all managed (remote) clusters. This enables display of scan results in the managed cluster console as well as use of the results in admission control rules of the managed cluster. Registries only need to be scanned once instead of by each cluster, reducing CPU/memory and network bandwidth usage. See the ",(0,r.jsx)(n.a,{href:"/navigation/multicluster/",children:"multi-cluster"})," section for more details."]}),"\n",(0,r.jsx)(n.h3,{id:"configure-registry-scanning",children:"Configure Registry Scanning"}),"\n",(0,r.jsx)(n.p,{children:"To configure registries and repositories to be scanning, go to the Assets -> Registries menu in the NeuVector console. Add or edit registries to be scanned. Use the Filter to define repositories or subsets of images to be scanned. If your registry requires access through a proxy, this can be configured in Settings -> Configuration."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Registry",src:i(1147).A+"",width:"2520",height:"992"})}),"\n",(0,r.jsx)(n.p,{children:"The registry will be scanned according to a schedule, which is configurable. By default, only new or updated images will be scanned. If you want to re-scan all applicable images whenever the CVE database is updated, select the Rescan After CVE DB Update button when configuring the registry. You can also select Layered Scan to show vulnerabilities by each layer in the image (note: layered scans can take longer and consume more resources to complete)."}),"\n",(0,r.jsx)(n.p,{children:"After the scan is completed you will see the results below it. Click on the repository/tag to see vulnerabilities and click on the vulnerability to see more info. You can also download the report in a CSV file or see the results in the Event logs."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Layered",src:i(93456).A+"",width:"2612",height:"1428"})}),"\n",(0,r.jsx)(n.p,{children:"The scan results include vulnerabilities by image layer, if this option was selected during registry/repository configuration, as well the compliance checks results. Click the compliance tab when viewing the scan results for the image to see compliance checks."}),"\n",(0,r.jsx)(n.p,{children:"Scanning will also discover and list all Modules (ie, an inventory) in the image, as shown below. It will also summarize the vulnerability risk by module and list all vulnerabilities for each module."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Modules",src:i(71487).A+"",width:"1287",height:"627"})}),"\n",(0,r.jsx)(n.p,{children:"Scanning is supported for images on public and private docker registries that are based on Native Docker, Amazon ECR, Redhat/Openshift, jFrog, Microsoft ACR, Sonatype Nexus, Harbor, Google cloud and other registries.  The scan report for the image comprises of the vulnerability status of various packages and binaries in the image. The brief summary of the scan report can be sent via webhook using the Response rule configuration in Policy -> Response Rules, or by Syslog by configuring a syslog server in Settings -> Configuration. Results can also be viewed in the Event logs."}),"\n",(0,r.jsx)(n.p,{children:"At least one repository filter is required (can't be left blank)."}),"\n",(0,r.jsx)(n.h4,{id:"repository-filter-examples",children:"Repository filter examples"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"filters",src:i(43762).A+"",width:"1616",height:"852"})}),"\n",(0,r.jsx)(n.p,{children:"Notes:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"To scan all image tags, add filter as * or *:*. This works on all registry types except the public docker registry."}),"\n",(0,r.jsx)(n.li,{children:"Repository should be full name if organization is nil for public docker registry or add library before repository as given above."}),"\n",(0,r.jsx)(n.li,{children:"Create a virtual repository and add all local repository to it to scan all tags on a JFrog registry with the subdomain docker access method."}),"\n",(0,r.jsx)(n.li,{children:"Regular expressions can be used in a filter. For example alpine:3.[8|9].* will scan all 3.8.x and 3.9.x images and tags on docker hub."}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"registry-scan-options",children:"Registry scan options"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Scan Layers:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Provides vulnerability scan result for every image layer separately"}),"\n",(0,r.jsx)(n.li,{children:"Provides information about commands executed, packages added in the layer"}),"\n",(0,r.jsx)(n.li,{children:"Images size of each layer"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Auto Scan:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Auto Scan is only supported with OpenShift imagestream integration. Proper role binding should be configured in advance."}),"\n",(0,r.jsx)(n.li,{children:"When Auto Scan is enabled, as soon as an image is pushed to the registry, the image scan will be scheduled."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Periodical Scan:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Enable periodic scan to scan periodically"}),"\n",(0,r.jsx)(n.li,{children:"Scan interval can set to be between 5 minutes to every 7 days."}),"\n",(0,r.jsx)(n.li,{children:"Because many Admission Control checks rely on image scan result, enabling periodical scan helps make sure Admission Control has the up-to-date information of the images."}),"\n",(0,r.jsx)(n.li,{children:"Note that NeuVector will scan images in a regsistry that are new/changed from the previous scan."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Rescan after CVE DB update","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Enable this option to rescan all images after the vulnerability database is updated."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"configuring-proxy-server-for-registry",children:"Configuring Proxy server for Registry"}),"\n",(0,r.jsx)(n.p,{children:"Please go to Settings -> Configuration to configure proxy settings for registry scanning."}),"\n",(0,r.jsx)(n.h4,{id:"native-docker-registry-also-quay-and-harbor",children:"Native Docker registry (also Quay and Harbor)"}),"\n",(0,r.jsx)(n.h5,{id:"add-native-docker-registry",children:"Add Native Docker registry"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Choose Docker registry as type"}),"\n",(0,r.jsx)(n.li,{children:"Give unique name to the registry"}),"\n",(0,r.jsx)(n.li,{children:"Type registry URL with port"}),"\n",(0,r.jsx)(n.li,{children:"Provide username and password if required by the registry"}),"\n",(0,r.jsxs)(n.li,{children:["Add repository as filter in the below format","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Organization/repository",":tag"]}),"\n",(0,r.jsx)(n.li,{children:"Repository can have wildcard with starting string"}),"\n",(0,r.jsx)(n.li,{children:"Example neuvector/all*:2*"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Adding private docker registry with username/password, scan layers enabled, periodic scan for every 30 minutes enabled and * as filter to scan all tags from all repository.\n",(0,r.jsx)(n.img,{alt:"docker",src:i(610).A+"",width:"1006",height:"275"})]}),"\n",(0,r.jsxs)(n.p,{children:["Adding public docker registry for scanning without username/password and 2 repositories with wildcard, scan layers enabled and periodic scan enabled.\n",(0,r.jsx)(n.img,{alt:"docker3",src:i(88839).A+"",width:"997",height:"268"})]}),"\n",(0,r.jsxs)(n.p,{children:["Adding public docker registry for scanning with username/password, wildcard repository, scan layers enabled, and periodic scan enabled.\n",(0,r.jsx)(n.img,{alt:"docker4",src:i(90411).A+"",width:"993",height:"272"})]}),"\n",(0,r.jsx)(n.p,{children:"Note for Quay:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Enter the top-level URL for your Quay registry; do not enter any directories to the path."}),"\n",(0,r.jsx)(n.li,{children:"You will need to generate an encrypted password in your Quay server/account, and use these credentials here.  Then, pass filter(s) as described above."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://user-images.githubusercontent.com/13239496/218163999-9b281bd9-d049-49f6-85cd-395d7c20c481.png",alt:"4 1-quay"})}),"\n",(0,r.jsx)(n.h5,{id:"start-scanning-the-docker-registry",children:"Start scanning the Docker registry"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Select registry to be scanned"}),"\n",(0,r.jsx)(n.li,{children:"Click start button to scan"}),"\n",(0,r.jsxs)(n.li,{children:["Wait till status changes from scanning to idle","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Scanning time varies depending on the size of the repository"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"scandocker",src:i(29561).A+"",width:"1058",height:"238"})}),"\n",(0,r.jsx)(n.h5,{id:"view-the-scan-result",children:"View the scan result"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Click on an image from images pane to view the scan result for the image."}),"\n",(0,r.jsx)(n.li,{children:"Access the scan result to find the vulnerability status of the image."}),"\n",(0,r.jsx)(n.li,{children:"Click download button to download scan result of the image if needed"}),"\n",(0,r.jsx)(n.li,{children:"Move mouse in between CVE detail and images to get back to summary"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Showing images scanned for the selected registry"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"scanned",src:i(9131).A+"",width:"750",height:"222"})}),"\n",(0,r.jsx)(n.p,{children:"Example showing layer scan result of an image, which shows vulnerabilities of each layer, layer size and commands run on each layer. In addition, there is a Compliance tab which shows the compliance test results for the image."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"layered",src:i(93456).A+"",width:"2612",height:"1428"})}),"\n",(0,r.jsx)(n.h4,{id:"amazon-ecr-registry",children:"Amazon ECR Registry"}),"\n",(0,r.jsxs)(n.p,{children:["Ref:  ",(0,r.jsx)(n.a,{href:"https://docs.aws.amazon.com/AmazonECR/latest/userguide/Registries.html",children:"https://docs.aws.amazon.com/AmazonECR/latest/userguide/Registries.html"})]}),"\n",(0,r.jsx)(n.h5,{id:"add-amazon-ecr-registry",children:"Add Amazon ECR registry"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Choose Amazon registry as type"}),"\n",(0,r.jsx)(n.li,{children:"Give unique name to the registry"}),"\n",(0,r.jsx)(n.li,{children:"Registry URL is automatically found with other information"}),"\n",(0,r.jsxs)(n.li,{children:["Supply below information for the registry. Refer above amazon link to get below information","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Registry id"}),"\n",(0,r.jsx)(n.li,{children:"Region"}),"\n",(0,r.jsx)(n.li,{children:"Access key id"}),"\n",(0,r.jsx)(n.li,{children:"Secret access key"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Add repository as filter in the following format","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Organization/repository",":tag"]}),"\n",(0,r.jsx)(n.li,{children:"Repository can have wildcard with starting string"}),"\n",(0,r.jsx)(n.li,{children:"Example neuvector/all*:2*"}),"\n",(0,r.jsx)(n.li,{children:"Organization can be empty if such image available in the registry"}),"\n",(0,r.jsx)(n.li,{children:"* to scan all image tags"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"aws",src:i(4751).A+"",width:"1018",height:"295"})}),"\n",(0,r.jsx)(n.h4,{id:"redhat-registry",children:"Redhat registry"}),"\n",(0,r.jsxs)(n.p,{children:["Ref:  ",(0,r.jsx)(n.a,{href:"https://access.redhat.com/containers",children:"https://access.redhat.com/containers"})]}),"\n",(0,r.jsx)(n.h5,{id:"add-red-hat-registry",children:"Add Red Hat registry"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Choose Redhat registry as type"}),"\n",(0,r.jsx)(n.li,{children:"Give unique name to the registry"}),"\n",(0,r.jsxs)(n.li,{children:["Type registry URL ",(0,r.jsx)(n.a,{href:"https://registry.connect.redhat.com/",children:"https://registry.connect.redhat.com/"})]}),"\n",(0,r.jsx)(n.li,{children:"Provide username and password of the account used for managing registry"}),"\n",(0,r.jsxs)(n.li,{children:["Add repository as filter in the below format","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Organization/repository",":tag"]}),"\n",(0,r.jsx)(n.li,{children:"Repository can have wildcard with starting string"}),"\n",(0,r.jsx)(n.li,{children:"Example neuvector/all*:2*"}),"\n",(0,r.jsx)(n.li,{children:"* to scan all image tags"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"redhat",src:i(54142).A+"",width:"1010",height:"227"})}),"\n",(0,r.jsx)(n.h4,{id:"openshift-registry",children:"Openshift registry"}),"\n",(0,r.jsx)(n.h5,{id:"add-openshift-registry-with-username-and-password",children:"Add OpenShift registry with username and password"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Choose OpenShift registry as type"}),"\n",(0,r.jsx)(n.li,{children:"Give unique name to the registry"}),"\n",(0,r.jsxs)(n.li,{children:['Type registry URL (obtain from the output of "oc get is" command in OpenShift network if it is different than default)',"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Default registry URL ",(0,r.jsx)(n.a,{href:"https://docker-registry.default.svc:5000/",children:"https://docker-registry.default.svc:5000/"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Provide username and password of the account used for managing registry"}),"\n",(0,r.jsxs)(n.li,{children:["Add repository as filter in the below format","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Organization/repository",":tag"]}),"\n",(0,r.jsx)(n.li,{children:"Example openshift/htt*:*"}),"\n",(0,r.jsx)(n.li,{children:"* to scan all image tags"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Enable auto scan to start the scan as soon as image is updated on OpenShift image stream.\n",(0,r.jsx)(n.img,{alt:"openshift",src:i(91707).A+"",width:"991",height:"277"})]}),"\n"]}),"\n",(0,r.jsx)(n.h5,{id:"add-openshift-registry-with-token",children:"Add OpenShift registry with token"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Choose OpenShift registry as type"}),"\n",(0,r.jsx)(n.li,{children:"Give unique name to the registry"}),"\n",(0,r.jsxs)(n.li,{children:['Type registry URL (obtain from the output of "oc get is" command in OpenShift network if it is different than default)',"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Default registry URL ",(0,r.jsx)(n.a,{href:"https://docker-registry.default.svc:5000/",children:"https://docker-registry.default.svc:5000/"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Provide token of the service account which has access to all namespaces","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Check below note to create service account and get token."}),"\n",(0,r.jsxs)(n.li,{children:["Create service account","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"oc project default"}),"\n",(0,r.jsx)(n.li,{children:"oc create sa nvqa"}),"\n",(0,r.jsx)(n.li,{children:"oc get sa"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Assign cluster admin role to service account to read all registry","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["oc adm policy add-cluster-role-to-user cluster-admin system:serviceaccount:default",":nvqa"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Get token for the service account","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"oc sa get-token nvqa"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Add repository as filter in the below format","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Organization/repository",":tag"]}),"\n",(0,r.jsx)(n.li,{children:"Example openshift/htt*:*"}),"\n",(0,r.jsx)(n.li,{children:"* to scan all image tags"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Enable auto scan to start the scan as soon image is updated on OpenShift image stream."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"openshift",src:i(92853).A+"",width:"1018",height:"282"})}),"\n",(0,r.jsx)(n.h5,{id:"stability-issues-in-openshift-37-registry",children:"Stability issues in Openshift 3.7 Registry"}),"\n",(0,r.jsx)(n.p,{children:"In OpenShift 3.7, API calls to pull container image metadata or to download an image can fail randomly. It can also fail on random images in different scan runs. You may see incomplete image lists or scans may fail on some images when this happens. If this occurs, the repository can be rescanned."}),"\n",(0,r.jsx)(n.h4,{id:"jfrog-artifactory",children:"JFrog Artifactory"}),"\n",(0,r.jsx)(n.p,{children:"Adding JFrog Artifactory registry (Docker Access method \u2013 Repository Path)\nJFrog management page admin->HTTP Setting showing docker access method  - Repository Path"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"jfrog",src:i(50122).A+"",width:"814",height:"745"})}),"\n",(0,r.jsx)(n.h5,{id:"add-jfrog-artifactory-registry-docker-access-method--repository-path",children:"Add JFrog Artifactory registry (Docker Access method \u2013 Repository Path)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Choose JFrog Artifactory as type"}),"\n",(0,r.jsxs)(n.li,{children:["Give a unique name to the registry","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Type the registry URL with port, for example ",(0,r.jsx)(n.a,{href:"http://10.1.7.122:8081/",children:"http://10.1.7.122:8081/"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Provide a username and password if required by the registry"}),"\n",(0,r.jsxs)(n.li,{children:["Add the repository as a filter in the below format","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Organization/repository",":tag"]}),"\n",(0,r.jsx)(n.li,{children:"Repository or tag can have wildcards at end, such as\xa0abc/*,\xa0abc/n*"}),"\n",(0,r.jsx)(n.li,{children:"To scan all tags for a repository, for example alpine, use\xa0alpine:*"}),"\n",(0,r.jsx)(n.li,{children:"The wildcard must be preceded by the full name, path, or starting string"}),"\n",(0,r.jsx)(n.li,{children:"* to scan all tags"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h5,{id:"adding-jfrog-artifactory-registry-docker-access-method--subdomain",children:"Adding JFrog Artifactory registry (Docker Access method \u2013 subdomain)"}),"\n",(0,r.jsx)(n.p,{children:"JFrog management page admin->HTTP Setting showing docker access method \u2013 Sub Domain"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"artifactory",src:i(28324).A+"",width:"495",height:"687"})}),"\n",(0,r.jsx)(n.p,{children:"Add JFrog Artifactory registry (Docker Access method \u2013 subdomain)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Choose JFrog Artifactory as type"}),"\n",(0,r.jsx)(n.li,{children:"Give a unique name to the registry"}),"\n",(0,r.jsxs)(n.li,{children:["Type the registry URL with port, for example ",(0,r.jsx)(n.a,{href:"http://10.1.7.122:8081/",children:"http://10.1.7.122:8081/"})]}),"\n",(0,r.jsx)(n.li,{children:"Choose Subdomain as JFrog Docker Access Method"}),"\n",(0,r.jsx)(n.li,{children:"Provide a username and password if required by the registry"}),"\n",(0,r.jsxs)(n.li,{children:["Add the repository as a filter in the below format","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Subdomain/repository",":tag"]}),"\n",(0,r.jsx)(n.li,{children:"Repository or tag can have wildcards at end, such as\xa0abc/*,\xa0abc/n*"}),"\n",(0,r.jsx)(n.li,{children:"To scan all tags for a repository, for example alpine, use\xa0alpine:*"}),"\n",(0,r.jsx)(n.li,{children:"The wildcard must be preceded by the full name, path, or starting string"}),"\n",(0,r.jsx)(n.li,{children:"* for scanning all tags from all subdomains"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"Create a virtual repository and add all local and remote repository to it. Specify this virtual repository in the filter section to scan all tags from local and remote remote repository."})}),"\n",(0,r.jsx)(n.p,{children:"Adding subdomain based JFrog registry to scan images from docker-local subdomain"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"local",src:i(49429).A+"",width:"977",height:"406"})}),"\n",(0,r.jsx)(n.p,{children:"Adding subdomain based JFrog registry to scan all tags from all subdomains"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"all",src:i(47978).A+"",width:"977",height:"406"})}),"\n",(0,r.jsx)(n.h5,{id:"add-jfrog-artifactory-registry-docker-access-method--port",children:"Add JFrog Artifactory registry (Docker Access method \u2013 port)"}),"\n",(0,r.jsx)(n.p,{children:"JFrog management page admin->HTTP Setting showing docker access method - Port"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"jfrogport",src:i(7078).A+"",width:"730",height:"750"})}),"\n",(0,r.jsx)(n.p,{children:"JFrog management page admin->Local Repository->docker-local repository-> Advanced - showing repository URL and registry port 8181"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"jfrogport",src:i(48317).A+"",width:"750",height:"319"})}),"\n",(0,r.jsx)(n.p,{children:"JFrog management page admin->Local Repository->guo repository-> Advanced - showing repository URL and registry port 8182"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"jfrogport",src:i(27188).A+"",width:"750",height:"348"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Choose JFrog Artifactory as type"}),"\n",(0,r.jsx)(n.li,{children:"Give a unique name to the registry"}),"\n",(0,r.jsxs)(n.li,{children:["Type the registry URL with port, for example ",(0,r.jsx)(n.a,{href:"http://10.1.7.122:8181/",children:"http://10.1.7.122:8181/"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Every Registry name has unique port"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Choose Port as JFrog Docker Access Method"}),"\n",(0,r.jsx)(n.li,{children:"Provide a username and password if required by the registry"}),"\n",(0,r.jsxs)(n.li,{children:["Add the repository as a filter in the below format","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Organization/repository",":tag"]}),"\n",(0,r.jsxs)(n.li,{children:["Repository or tag can have wildcards at end, such as abc/",(0,r.jsx)(n.em,{children:", abc/n"})]}),"\n",(0,r.jsx)(n.li,{children:"To scan all tags for a repository, for example alpine, use alpine:*"}),"\n",(0,r.jsx)(n.li,{children:"The wildcard must be preceded by the full name, path, or starting string"}),"\n",(0,r.jsx)(n.li,{children:"* for scanning all tags"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Adding JFrog registry for port access method for registry docker-local with port 8181"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"jfrogport",src:i(81805).A+"",width:"998",height:"347"})}),"\n",(0,r.jsx)(n.p,{children:"Adding JFrog registry for port access method for registry with port 8182"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"jfrogport",src:i(39300).A+"",width:"998",height:"345"})}),"\n",(0,r.jsx)(n.p,{children:"Adding JFrog registry for port access method for the virtual registry with port 8188, which has all local registries added to it."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"jfrogport",src:i(52863).A+"",width:"990",height:"343"})}),"\n",(0,r.jsx)(n.p,{children:"Showing scanned result for docker-local registry"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"jfrogport",src:i(153).A+"",width:"976",height:"291"})}),"\n",(0,r.jsx)(n.h5,{id:"add-saas-jfrog-artifactory-registry-docker-access-method--port",children:"Add SaaS JFrog Artifactory registry (Docker access method \u2013 Port)"}),"\n",(0,r.jsx)(n.p,{children:"Choose JFrog Artifactory as type"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Give a unique name to the registry"}),"\n",(0,r.jsxs)(n.li,{children:["Type the registry URL, for example ",(0,r.jsx)(n.a,{href:"https://jfrogtraining-docker-nv-virtual.jfrog.io",children:"https://jfrogtraining-docker-nv-virtual.jfrog.io"})]}),"\n",(0,r.jsx)(n.li,{children:"Choose Port as JFrog Docker Access Method"}),"\n",(0,r.jsx)(n.li,{children:"Provide a username and password if required by the registry"}),"\n",(0,r.jsxs)(n.li,{children:["Add the repository as a filter in the below format","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Organization/repository",":tag"]}),"\n",(0,r.jsx)(n.li,{children:"* to scan all tags of all repository"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"jfrogsaas",src:i(16191).A+"",width:"974",height:"385"})}),"\n",(0,r.jsx)(n.h5,{id:"start-scanning-a-jfrog-artifactory-registry",children:"Start Scanning a JFrog Artifactory Registry"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Select registry to be scanned"}),"\n",(0,r.jsx)(n.li,{children:"Click start button to scan"}),"\n",(0,r.jsxs)(n.li,{children:["Wait until status changes from scanning to idle","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Scanning time varies depending on the size of the repository"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"google-container-registry",children:"Google Container Registry"}),"\n",(0,r.jsxs)(n.p,{children:["Ref:\n",(0,r.jsx)(n.a,{href:"https://cloud.google.com/container-registry/docs/advanced-authentication",children:"https://cloud.google.com/container-registry/docs/advanced-authentication"}),"\n",(0,r.jsx)(n.a,{href:"https://cloud.google.com/container-registry/docs/advanced-authentication#json_key_file",children:"https://cloud.google.com/container-registry/docs/advanced-authentication#json_key_file"})]}),"\n",(0,r.jsx)(n.h5,{id:"enable-cloud-resource-manager-api-for-the-project",children:"Enable Cloud Resource Manager API for the project"}),"\n",(0,r.jsxs)(n.p,{children:["Google Cloud Platform->Choose Project->API and Services->Enable APIS and Services->Search \u201cCloud Resource Manager API\u201d->Enable API\n",(0,r.jsx)(n.a,{href:"https://console.cloud.google.com/apis/library?project=nvtest-219600&q=Cloud%20Resource%20Manager%20API",children:"https://console.cloud.google.com/apis/library?project=nvtest-219600&q=Cloud%20Resource%20Manager%20API"}),"   (change project name)\n",(0,r.jsx)(n.img,{alt:"gcp",src:i(36793).A+"",width:"750",height:"609"})]}),"\n",(0,r.jsx)(n.h5,{id:"create-key-for-container-service-account",children:"Create key for container service account"}),"\n",(0,r.jsxs)(n.p,{children:["Google Cloud Platform--\x3eIAM--\x3eService Account--\x3eaccount with container registry--\x3eCreateKey(action)--\x3e\n",(0,r.jsx)(n.img,{alt:"gcpiam",src:i(38875).A+"",width:"992",height:"296"})]}),"\n",(0,r.jsx)(n.h5,{id:"copy-json-file-to-client-machine",children:"Copy json file to client machine"}),"\n",(0,r.jsx)(n.h5,{id:"add-google-container-registry-from-the-neuvector-gui",children:"Add Google Container Registry from the NeuVector GUI"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Choose Google registry as type"}),"\n",(0,r.jsx)(n.li,{children:"Give unique name to the registry"}),"\n",(0,r.jsxs)(n.li,{children:["Type registry URL. Sample ",(0,r.jsx)(n.a,{href:"https://gcr.io/",children:"https://gcr.io/"})," (this could also be us.gcr.io, eu.gcr.io etc)"]}),"\n",(0,r.jsx)(n.li,{children:"Paste all content above captured json file into JSON key."}),"\n",(0,r.jsxs)(n.li,{children:["Add repository as filter in the below format","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Project-id/repository",":tag"]}),"\n",(0,r.jsx)(n.li,{children:"Example nvtestid-1/neuvector*:*"}),"\n",(0,r.jsxs)(n.li,{children:["* to scan all image tags\n",(0,r.jsx)(n.img,{alt:"gcpscan",src:i(61180).A+"",width:"1012",height:"285"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h5,{id:"start-scanning-a-google-container-registry",children:"Start Scanning a Google Container Registry"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Select registry to be scanned"}),"\n",(0,r.jsx)(n.li,{children:"Click start button to scan"}),"\n",(0,r.jsxs)(n.li,{children:["Wait until status changes from scanning to idle","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Scanning time varies depending on the size of the repository"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"azure-container-registry",children:"Azure Container Registry"}),"\n",(0,r.jsxs)(n.p,{children:["Ref:\n",(0,r.jsx)(n.a,{href:"https://azure.microsoft.com/en-us/services/container-registry/",children:"https://azure.microsoft.com/en-us/services/container-registry/"})]}),"\n",(0,r.jsx)(n.h5,{id:"obtain-azure-container-username-and-password-as-shown-below",children:"Obtain Azure container username and password as shown below"}),"\n",(0,r.jsx)(n.p,{children:"Azure container registry -> user-> access keys->password"}),"\n",(0,r.jsx)(n.p,{children:"Showing azure portal username and password for container registry access"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"azure",src:i(97172).A+"",width:"1016",height:"711"})}),"\n",(0,r.jsx)(n.h5,{id:"add-azure-container-registry-from-the-neuvector-gui",children:"Add Azure Container Registry from the NeuVector GUI"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Choose Azure registry as type"}),"\n",(0,r.jsx)(n.li,{children:"Give unique name to the registry"}),"\n",(0,r.jsxs)(n.li,{children:["Type registry URL. Sample ",(0,r.jsx)(n.a,{href:"https://neuvector.azure.io",children:"https://neuvector.azure.io"})," (obtain from azure portal)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Container registry->user->Overview->Login Server"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Add username and password","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Azure container registry -> user-> access keys->password"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Add repository as filter in the below format","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["repository",":tag"]}),"\n",(0,r.jsx)(n.li,{children:"example alpine:*"}),"\n",(0,r.jsx)(n.li,{children:"* to scan all image tags"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Showing azure portal login server for Azure container registry"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"azure",src:i(50335).A+"",width:"1048",height:"507"})}),"\n",(0,r.jsx)(n.p,{children:"Adding Azure container registry to scan all tags"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"azureadd",src:i(92713).A+"",width:"1036",height:"239"})}),"\n",(0,r.jsx)(n.h5,{id:"start-scanning-a-azure-container-registry",children:"Start Scanning a Azure Container Registry"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Select registry to be scanned"}),"\n",(0,r.jsx)(n.li,{children:"Click start button to scan"}),"\n",(0,r.jsxs)(n.li,{children:["Wait until status changes from scanning to idle","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Scanning time varies depending on the size of the repository"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"sonatype-nexus-docker-registry",children:"Sonatype Nexus Docker registry"}),"\n",(0,r.jsxs)(n.p,{children:["Ref:\n",(0,r.jsx)(n.a,{href:"https://help.sonatype.com/repomanager3/private-registry-for-docker",children:"https://help.sonatype.com/repomanager3/private-registry-for-docker"}),"\n",(0,r.jsx)(n.a,{href:"https://hub.docker.com/r/sonatype/nexus3/",children:"https://hub.docker.com/r/sonatype/nexus3/"})]}),"\n",(0,r.jsx)(n.h5,{id:"add-sonatype-nexus-docker-registry",children:"Add Sonatype Nexus Docker registry"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Choose Sonatype Nexus as type"}),"\n",(0,r.jsx)(n.li,{children:"Give unique name to the registry"}),"\n",(0,r.jsx)(n.li,{children:"Type registry URL with port"}),"\n",(0,r.jsx)(n.li,{children:"Provide username and password if required by the registry"}),"\n",(0,r.jsxs)(n.li,{children:["Add repository as filter in the below format","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Organization/repository",":tag"]}),"\n",(0,r.jsx)(n.li,{children:"Repository can have wildcard with starting string"}),"\n",(0,r.jsx)(n.li,{children:"Example neuvector/all*:2*"}),"\n",(0,r.jsx)(n.li,{children:"* to scan all image tags"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Adding Sonatype Nexus docker registry with username/password and repository *:*  for scanning"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"sonatype",src:i(68117).A+"",width:"1068",height:"249"})}),"\n",(0,r.jsx)(n.h5,{id:"start-scanning-sonatype-nexus-docker-registry",children:"Start scanning Sonatype Nexus Docker registry"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Select registry to be scanned"}),"\n",(0,r.jsx)(n.li,{children:"Click start button to scan"}),"\n",(0,r.jsxs)(n.li,{children:["Wait till status changes from scanning to idle","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Scanning time varies depending on the size of the repository"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"gitlab-container-registry",children:"Gitlab Container Registry"}),"\n",(0,r.jsx)(n.h5,{id:"sample-gitlab-environmnent-configurations",children:"Sample GitLab Environmnent Configurations"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo docker run --detach \\\n  --hostname gitlab \\\n  --env GITLAB_OMNIBUS_CONFIG=\"external_url 'http://10.1.7.73:9096'; gitlab_rails['lfs_enabled'] = true;\" \\\n  --publish 10.1.7.73:9095:9095 --publish 10.1.7.73:9096:9096 --publish 10.1.7.73:6222:22 \\\n  --name gitlab \\\n  --restart always \\\n  --volume /srv/gitlab/config:/etc/gitlab \\\n  --volume /srv/gitlab/logs:/var/log/gitlab \\\n  --volume /srv/gitlab/data:/var/opt/gitlab \\\ngitlab/gitlab-ce:latest\nExternal_URL:  http://10.1.7.73:9096\nRegistry_URL: https://10.1.7.73:9095\n"})}),"\n",(0,r.jsx)(n.h5,{id:"obtain-gitlab-private-token-as-shown-below",children:"Obtain Gitlab private token as shown below"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Navigate to the settings page from the icon located at the upper-righthand corner of the GitLab login page as illustrated below:"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"gitlab",src:i(54970).A+"",width:"243",height:"271"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Navigate to the Access_Tokens page as shown below from the User_Settings page:"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"gitlab",src:i(1767).A+"",width:"1503",height:"764"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Fill in all applicable fields, and click \u201cCreate personal access token\u201d when ready to generate the access token:"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"gitlab",src:i(21981).A+"",width:"750",height:"400"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Access token will no longer be available once the user has navigated away from the generated token page.\xa0 Therefore, it is highly recommended to make a copy of the access token prior to navigating or closing the following page:"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"gitlab",src:i(31948).A+"",width:"1502",height:"368"})}),"\n",(0,r.jsx)(n.h5,{id:"obtaining-external-and-registry-urls",children:"Obtaining External and Registry URLs"}),"\n",(0,r.jsxs)(n.p,{children:["External-URL:   The external url is the API-Server's URL.",(0,r.jsx)(n.br,{}),"\n","Registry-URL:  This can be obtained from the Container Registry page of the GitLab webconsole.  One way to get to this page is navigating from the GitLab\u2019s webconsole from Projects > Your Projects > Administrator / \u2026 > Left-Pane (Container Registry) > Mouse-over (root/.../)"]}),"\n",(0,r.jsx)(n.p,{children:"The following is a sample screen-capture of the page that reveals both the External-URL and the Registry-URL:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"gitlab",src:i(39793).A+"",width:"750",height:"437"})}),"\n",(0,r.jsx)(n.h5,{id:"add-gitlab-registry-from-the-neuvector-console",children:"Add Gitlab Registry from the NeuVector Console"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Choose Gitlab as the registry type"}),"\n",(0,r.jsx)(n.li,{children:"Give unique name to the registry"}),"\n",(0,r.jsx)(n.li,{children:"Type registry URL with port"}),"\n",(0,r.jsx)(n.li,{children:"Provide username and password if required by the registry"}),"\n",(0,r.jsx)(n.li,{children:"Provide Gitlab external URL and the private token obtained from the last section"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"gitlab",src:i(70595).A+"",width:"836",height:"489"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"The Registry URL is used for pulling images into the NeuVector scanner-platform from GitLab to do registry scanning.  While the External URL is used for retrieving a list of images, registries, and metadata used by the registry scanning feature."})}),"\n",(0,r.jsx)(n.h4,{id:"ibm-cloud-container-registry",children:"IBM Cloud Container Registry"}),"\n",(0,r.jsxs)(n.p,{children:["Ref:  ",(0,r.jsx)(n.a,{href:"https://www.ibm.com/cloud/container-registry",children:"https://www.ibm.com/cloud/container-registry"})]}),"\n",(0,r.jsx)(n.h5,{id:"add-ibm-container-registry",children:"Add IBM Container registry"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Choose IBM Cloud Container Registry as type"}),"\n",(0,r.jsx)(n.li,{children:"Give unique name to the registry"}),"\n",(0,r.jsxs)(n.li,{children:["Type registry URL ",(0,r.jsx)(n.a,{href:"https://us.icr.io/",children:"https://us.icr.io/"})]}),"\n",(0,r.jsxs)(n.li,{children:["Provide iamapikey as username and the apikey below as password","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Create apikey from CLI","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"ibmcloud iam api-key-create atibmKey"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Create apikey from GUI","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"IBM Cloud->Manage-Access(IAM)-IBM Cloud API Keys"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Provide IBM Cloud Account","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Obtain IBM cloud account from CLI","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Ibmcloud cr info"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Add repository as filter in the below format","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Organization/repository",":tag"]}),"\n",(0,r.jsx)(n.li,{children:"Repository can have wildcard with starting string"}),"\n",(0,r.jsx)(n.li,{children:"Example neuvector/all*:2*"}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"to scan all image tags"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Enable other parameters if needed"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"ibm",src:i(53534).A+"",width:"1022",height:"350"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"The username for the registry authentication must be 'iamapikey'"})}),"\n",(0,r.jsx)(n.h4,{id:"harbor-registry",children:"Harbor Registry"}),"\n",(0,r.jsx)(n.p,{children:"Use the same instructions as for the Native Docker registry, choosing Docker as the registry."}),"\n",(0,r.jsx)(n.p,{children:"The filter field can not be left blank. Enter a repository filter, or add filter as * to scan all repositories."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},43762:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/1-filter-examples-808b274b5655c57eed89d5a2aa89d413.png"},54142:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/10-redhat-796f144bd7174d79c99ae736f0301b26.png"},50122:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/12-jfrog-e8616ebb0a83ec8af88a69a34b3f81fa.png"},28324:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/14-artifact-6abaa1bcbc1fd3e50aa3a97658416b41.png"},36793:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/17-gcp-886be9de6767fd03f0e0f67d9af9a3bb.png"},38875:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/18-gcpiam-a13973b28f4b2542d4a94cc50453d095.png"},61180:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/19-gcpscan-4a41916ecccebec12c5f246bcb3f095a.png"},91707:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/1a_openshift-332580feaf17de1dc2b7a2aaa7968930.png"},92853:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/1a_openshift_token-42136782027605231a66d49ba9636c16.png"},610:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/2-dockerprivate-1ce112a2a16627f3fb287f896807cc06.png"},97172:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/20-azure-e7b5ecaca24f83199c6d1d9bfc309993.png"},50335:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/21-azurereg-91dbccf3fcdb6306b344f8d62f555ec1.png"},92713:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/22-azureadd-239a4613eae2529eaf259f8df73e6c18.png"},68117:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/23-sonatype-b1fc8bc9f45ea8d17cc73e66b7d59cf3.png"},88839:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/3-dockerpublic-bc218e0b81be5a2a955f75240dec18b9.png"},90411:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/4-dockerpub-wild-c0abb7e990498e66574c20afcde2b1c9.png"},29561:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/5-scandocker-a47d799b42db210aab01f5f7b7f34ed5.png"},9131:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/6-imagescan-58ee368c62433614e4f3c3566985f8a1.png"},4751:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/9-aws-11d4750f382b48868a181ab4382bc3f4.png"},71487:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/Image_Modules-006a6fa37fd5820a578ea97c21d38fd1.png"},31948:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/gitlabaccesstoken-f4bc44601d6173665819cf96e85109dc.png"},39793:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/gitlabexternalurl-6b01e44028c28cf2a6cc32ff5df521a6.png"},21981:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/gitlabpersonaltoken_new-1fe97ee01fa58ed6df5814002475020e.png"},70595:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/gitlabregistryscan-77487524931d17226d23b7b98c6b4957.png"},54970:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/gitlabsettings-52191332aeaa1dec011d1f2c10d77702.png"},1767:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/gitlabusersettings-7f33187f5af05f620003782ba0b9d07a.png"},53534:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/ibm-1-d613fb651fbfe254bc15c195c69efefb.png"},93456:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/image_scan_4-2ae108767ee5c4f10b71291a60302805.png"},81805:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/jfrog104-74c9f231ffe9f2a5a733bd1d7d5ba4df.png"},39300:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/jfrog105-dea72423178fac7f2e26d313271244d0.png"},52863:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/jfrog106-392f1a27c22c53de3734f059f8ff6ba1.png"},47978:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/jfrog_all_subs-5aece3ef2563deca997d0bdcc4d22ccf.png"},16191:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/jfrog_saas-cd48504720a6444699764dfdec232dca.png"},49429:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/jfrog_sub_local-32a21ac60a292555c53f633a2fe41964.png"},7078:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/jfrogport1-396253fe1118755278e1c0785c72b289.png"},48317:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/jfrogport2-439875f43a3c1efb40fc4df30925d648.png"},27188:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/jfrogport3-5624bc5d5029c3a493bda3fd20b04bf8.png"},153:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/jfrogport6-c51f6fc5869ed54ba1de95db849c7ca1.png"},1147:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/registry-scan-e44c29cefea3c9242e576664141e395d.png"},28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var r=i(96540);const s={},t=r.createContext(s);function a(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);