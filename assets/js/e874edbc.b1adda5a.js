"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2213],{55001:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>l,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var o=n(85893),r=n(11151);const i={title:"Reporting",sidebar_label:"7. Reporting",taxonomy:{category:"docs"},slug:"/reporting"},s="Reporting",c={id:"reporting/reporting",title:"Reporting",description:"Reporting and Notifications",source:"@site/versioned_docs/version-5.3/07.reporting/07.reporting.md",sourceDirName:"07.reporting",slug:"/reporting",permalink:"/neuvector-docs/reporting",draft:!1,unlisted:!1,editUrl:"https://github.com/neuvector/docs/edit/main/versioned_docs/version-5.3/07.reporting/07.reporting.md",tags:[],version:"5.3",sidebarPosition:7,frontMatter:{title:"Reporting",sidebar_label:"7. Reporting",taxonomy:{category:"docs"},slug:"/reporting"},sidebar:"tutorialSidebar",previous:{title:"Parallel & Standalone Scanners",permalink:"/neuvector-docs/scanning/scanners"},next:{title:"Reporting & Notifications",permalink:"/neuvector-docs/reporting/reporting"}},a={},p=[];function d(e){const t={h1:"h1",p:"p",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"reporting",children:"Reporting"}),"\n",(0,o.jsx)(t.p,{children:"Reporting and Notifications"})]})}function l(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>c,a:()=>s});var o=n(67294);const r={},i=o.createContext(r);function s(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);